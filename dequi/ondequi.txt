1.In đảo ngược số n nguyên dương
	void Indaonguọc(int n)
	{
		if(n!=0)
		{
			cout << n%10;
			Indaonguọc(n/10);
		}
	}
2.Đếm số lượng chữ số nguyên dương n
	int demnguoc(int n)
	{
		if(n==0) return 0;
		return 1 + demnguoc(n/10);
	}
3. Tìm chữ số có giá trị lớn nhất của số nguyên dương n
	int demsln(long n, long &max)
	{
		long m;
		if(n==0)
			return max;
		else
		{
			m=n%10;
			if(m>max)
				max= m;
		}
		return demsln(n/10,max);
	}
4. Tìm giá trị nguyên Logarit cơ số 2 của n
 int logarit(int n)
 { 
	if(n<0) return -1;
	else
		if(n>=2) // n = 8=> return 1 + logarit(4) =>  return 1 + 1 + logarit(2)=>...
		 return 1 + logarit(n/2);
	else 
		return 0;
 }
5.Đổi sang hệ nhị phân của số nguyên dương n 
void Nhiphan(int n)
{
	if(n!=0)
	{
		Nhiphan(n/2);
		cout << n%2;
	}
}
6.Tìm ước chung lớn nhất 2 số a và b
int ucln(int a, int b)
{
	if(a==b)
		return a;
	else
	{
		if(a>b)
			a = a-b;
		else
			b = b-a;
	}
	return ucln(a,b);
}
7. Tìm chứ số đầu tiên của n
 int csdt(int n)
 {
	if(n<10)
		return n;
	else
		return csdt(n/10);
	
 }
 8. Tich P(n)=1.3.5..(2n+1) voi n>=0
 long tich(int n)
 {
	if(n==0)
		return 0;
	else
		return (2n+1) *tich(n-1)
 }
 9/ Tính S(n)=1+3+5+…+(2.n+1) với n>=0
 long tong(int n)
 {
	if(n==0)
		return 1;
	else
		return	n+Tong(n–2);
 }
 11/ Tính S(n)=1+1.2+1.2.3+…+1.2.3…n với n>0

long GiaiThua(int n)
{

if(n==1)
{
    return 1;
}

  return GiaiThua(n-1)*n;
}

long Tong(int n)

{

      if(n == 1)

{

    return 1;
}

      return Tong(n-1) + GiaiThua(n-1)*n;

}11/ Tính S(n)=1+1.2+1.2.3+…+1.2.3…n với n>0

long GiaiThua(int n)
{

if(n==1)
{
    return 1;
}

  return GiaiThua(n-1)*n;
}

long Tong(int n)

{

      if(n == 1)

{

    return 1;
}

      return Tong(n-1) + GiaiThua(n-1)*n;

}
12/ Tính S(n)=1^2+2^2+3^2+....+n^2 với n>0

long TongBinhPhuong(int n)
{
if(n<=1)
    return 1;
    else
         return n*n+ TongBinhPhuong(n-1);
}

14/ Tính S(n) = 1 + 1/2 + 1/3 + ... + 1/n với n>0

float Tinh(float n)
{    
if (n==1)
        return 1;
     return Tinh(n-1) + 1/n;
}